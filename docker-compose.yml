version: '3'
services:
    server:
        image: cs3219_server
        container_name: cs3219_server
        restart: always
        build:
            context: ./backend
            dockerfile: Dockerfile
        command: bash run.sh
        ports:
            - 5000:5000
        depends_on:
            - peerprep_kafka
        # environment:
        networks:
            - network
    react:
      image: cs3219_react
      container_name: cs3219_react
      restart: always
      build:
        context: ./frontend
        dockerfile: Dockerfile
      command: npm start
      ports:
          - 3000:3000
      # environment:
      # volumes:
      depends_on:
        - server
      networks:
          - network
          
    peerprep_kafka:
        image: confluentinc/cp-kafka:7.0.0
        container_name: peerprep_kafka
        ports:
            - "9092:9092"
            - "19092:19092"
        restart: always
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'peerprep_zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://peerprep_kafka:9092,PLAINTEXT_INTERNAL://broker:29092,PLAINTEXT_HOST://localhost:19092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        depends_on:
            - peerprep_zookeeper
        networks:
            - network

    peerprep_zookeeper:
        image: confluentinc/cp-zookeeper:7.0.0
        container_name: peerprep_zookeeper
        ports:
            - "2181:2181"
        restart: always
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        networks:
            - network

networks:
    network:
# volumes:
